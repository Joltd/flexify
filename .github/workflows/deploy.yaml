name: Build

concurrency: build

on:
  push:
    branches:
      - master

env:
  PROJECT_NAME: flexify
  PROJECT_VERSION: 1.0.${{ github.run_number }}

jobs:

  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout-
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '22'
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Build Server
        uses: gradle/gradle-build-action@v2
        with:
          arguments: bootJar
          build-root-directory: ./server

      - name: Build Web
        working-directory: ./web
        run: |
          npm install
          npm update
          npm run build

      - name: Build Docker images
        run: |
          docker build -t ${{ env.PROJECT_NAME }}-server:${{ env.PROJECT_VERSION }} --build-arg APP_VERSION=${{ env.PROJECT_VERSION }} ./server
          docker build -t ${{ env.PROJECT_NAME }}-web:${{ env.PROJECT_VERSION }} ./web

      - name: Save Docker images
        run: |
          docker save -o server.tar ${{ env.PROJECT_NAME }}-server:${{ env.PROJECT_VERSION }}
          docker save -o web.tar ${{ env.PROJECT_NAME }}-web:${{ env.PROJECT_VERSION }}

      - name: Push to hosting
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          source: "server.tar,web.tar"
          target: ~/build/${{ env.PROJECT_NAME }}

      - name: Load Docker images
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            docker load -i ~/build/${{ env.PROJECT_NAME }}/server.tar
            docker load -i ~/build/${{ env.PROJECT_NAME }}/web.tar

      - name: Tag local images as latest
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            docker tag ${{ env.PROJECT_NAME }}-web:${{ env.PROJECT_VERSION }} ${{ env.PROJECT_NAME }}-web:latest
            docker tag ${{ env.PROJECT_NAME }}-server:${{ env.PROJECT_VERSION }} ${{ env.PROJECT_NAME }}-server:latest

      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            cd ~/build/${{ env.PROJECT_NAME }}
            docker compose up -d

      - name: Clean up
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_PRIVATE_KEY }}
          script: |
            rm ~/build/${{ env.PROJECT_NAME }}/server.tar ~/build/${{ env.PROJECT_NAME }}/web.tar
            docker image prune -a -f
